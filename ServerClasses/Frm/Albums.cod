class inherited Com.Frm.ICodeName "Альбомы";

  import Com.Consts

inclass public

  var RecordClass :Class Com.Rec.CodeName := Rec.Albums;

inclass private

 #override
  var UseResource :Logical := true;

inobject public

  GenresStructAlbums :MyMusic.Rec.GenresStructAlbums;

inobject private

  #override
  FRecord        :MyMusic.Rec.Albums;
  Singled        :Com.Ctrl.ICheckBox;
  Year           :Com.Ctrl.IEdit;
  MusicantStruct :MyMusic.Rec.MusicantStruct;
  AddGenres      :MyMusic.Rec.GenresStruct;
  YearPurchase   :Com.Ctrl.IEdit; -- Когда диск куплен
  FrameRentals   :Com.Ctrl.IFrame;
  Price          :Com.Ctrl.IEdit; -- Стоимость диска
--  Rentals        :MyMusic.Rec.RentalStruct;


  func MusicantOnDelete(aSender :Com.Ctrl.ITable; aIndex :Integer) :Logical
    -- Удалили все жанры
    FRecord.GenresAlbums.Clear;
    -- Очистили поле Исполнитель
    FRecord.Musicant.Clear
  end

  proc EditorOnShow(aSender :Com.Frm.IForm)
    if FRecord.IsNew then
      Singled.Checked = true
      Price.SetValue(250)
    end
  end

  proc ButAddGenresForAlbumOnClick(aSender :Com.Ctrl.IControl; aIndex :Integer)
    #warning "TODO: фильтр на незадействованные жанры"
    Tab.Genres.ShowFormEx(,, BlockedWindow,
                          proc( aSender :Com.Frm.IForm; aModalResult :Integer )
                            if aModalResult = cmOk then
                              var vTab = Tab.Genres(aSender)
                              if vTab.CardFile.SelectedCount > 0 then
                                for var I = 1..vTab.CardFile.Selected.Count do
                                  var vRec =  Rec.Genres.OpenRecord(vTab.CardFile.Selected[I])
                                  AddGenre(vRec)
                                end
                              else
                                AddGenre(vTab.Current as Rec.Genres)
                              end
                            end
                          end
                          )
  end


  proc AddGenre(aGenre :Rec.Genres)
    #warning "TODO: проверить, что жанра нет в списке жанров"
    -- Проверка на наличие такого жанра
    var vAlbumGenres = FRecord.GenresAlbums
    var vFound = false
    for var I = 1..vAlbumGenres.Count do
      var vGenre = vAlbumGenres[I].GenresAlbum
      vFound = (vGenre?.InternalRecord = aGenre?.InternalRecord)
      if vFound then
        break
      end
    end
    if not vFound then
      var vAlbumGenre = FRecord.GenresAlbums.AddEx
      vAlbumGenre.GenresAlbum = aGenre
    end
  end

  proc MusicantsOnChange(aSender :Com.Ctrl.IEdit; aIndex :Integer)
    -- Удалили все жанры
    FRecord.GenresAlbums.Clear;
    -- Добавим жанры этого музыканта
    var vMusicant = FRecord.Musicant[aIndex].Musicant
    if vMusicant <> nil then
      for var I = 1..vMusicant.Genres.Count do
        var vGenre = vMusicant.Genres[I].Genre$
         if vGenre._NotNull then
           var vAlbumGenre = FRecord.GenresAlbums.AddEx
           vAlbumGenre.GenresAlbum = vGenre
         end
      end
    end
--    var vMusicant = FRecord.Musicant[aIndex].Musicant
--    for var I = 1..vMusicant.Genres.Count do
--      var vGenre = vMusicant.Genres[I].Genre$
--      if vGenre._NotNull then
--        var vFound = false
--        for var J = 1..FRecord.GenresAlbums.Count do
--          var vAlbubGenre = FRecord.GenresAlbums[J].GenresAlbum
--  --        vFound = Com.Rec.IRecord.Eq(vGenre$, vAlbubGenre$)
--          vFound = (vGenre?.InternalRecord = vAlbubGenre?.InternalRecord)
--          if vFound then
--            break
--          end
--        end
--        if not vFound then
--          var vAlbubGenre = FRecord.GenresAlbums.AddEx
--          vAlbubGenre.GenresAlbum = vGenre
--        end
--      end
--    end
  end

  #override
  proc Init;
    inherited Init
    var vRentalsTab = Tab.Data.Rental.Create
    vRentalsTab.AddOnCreateRecord(
     proc(aRec :Com.Rec.IRecord)
       if aRec is Rec.Data.RentalDoc then
         Rec.Data.RentalDoc(aRec).fldAlbum = FRecord
       end
     end
    )
    vRentalsTab.CardFile.Filter = 'Album = ' + fRecord.DocIDStr
    FrameRentals.AddComp(vRentalsTab)
  end

  #override
  proc InitRecord;
     inherited InitRecord;
     GenresStructAlbums = FRecord.GenresAlbums.DefStruct
     MusicantStruct = FRecord.Musicant.DefStruct
    -- Rentals = FRecord.Rentals.DefStruct
     -- Одинарный включено по умолчанию
     -- Singled.Checked = FRecord.Singled
     -- AddGenres = GenresStruct.DefStruct
  end

  #override
  proc AfterInit
    inherited AfterInit
    GenresStructAlbums = nil
    MusicantStruct = nil
    -- Rentals = nil
    -- Singled.Checked = true
  end



end